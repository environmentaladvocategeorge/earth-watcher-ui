AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: CloudFormation Template for Expenzo CloudFront Distribution

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - prod
    Description: "The environment for the CloudFront distribution."
  DeploymentRoleARN:
    Type: String
    Description: "ARN of the IAM role for deployment."
  ResourceBaseIdentifier:
    Type: String
    Description: "Base identifier for resource naming."

Resources:
  UIS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ResourceBaseIdentifier}-${Environment}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  UIS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref UIS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref DeploymentRoleARN
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource:
              - !Sub "${UIS3Bucket.Arn}/*"
              - !Sub "${UIS3Bucket.Arn}"
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${UICloudFrontOAI.Id}"
            Action: s3:GetObject
            Resource: !Sub "${UIS3Bucket.Arn}/*"

  UICloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: !Sub "${ResourceBaseIdentifier}-${Environment}.s3.${AWS::Region}.amazonaws.com"
            DomainName: !Sub "${ResourceBaseIdentifier}-${Environment}.s3.${AWS::Region}.amazonaws.com"
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${UICloudFrontOAI.Id}"
        DefaultRootObject: "index.html"
        DefaultCacheBehavior:
          TargetOriginId: !Sub "${ResourceBaseIdentifier}-${Environment}.s3.${AWS::Region}.amazonaws.com"
          ViewerProtocolPolicy: "allow-all"
          AllowedMethods:
            - HEAD
            - GET
          CachedMethods:
            - HEAD
            - GET
          Compress: true
          CachePolicyId: !Ref UICachePolicy
        Enabled: true
        HttpVersion: "http2"
        PriceClass: "PriceClass_All"
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  UICachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub "${ResourceBaseIdentifier}-cache-policy-${Environment}"
        Comment: !Sub "Cache policy for ${ResourceBaseIdentifier} application"
        DefaultTTL: 3600
        MaxTTL: 86400
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none

  UICloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub "OAI for ${ResourceBaseIdentifier} UI ${Environment}"

Outputs:
  UIS3BucketName:
    Description: "S3 Bucket name"
    Value: !Ref UIS3Bucket
  CloudFrontDistributionId:
    Description: "UI CloudFront Distribution ID"
    Value: !Ref UICloudFrontDistribution
  CloudFrontDomainName:
    Description: "UI CloudFront Domain Name"
    Value: !GetAtt UICloudFrontDistribution.DomainName
